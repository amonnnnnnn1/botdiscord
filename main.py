import discord
from discord import ui
from discord.ext import commands
import os
import math
from datetime import datetime, timezone
from aiohttp import web
import asyncio
from dotenv import load_dotenv

load_dotenv()

TOKEN = os.getenv("DISCORD_TOKEN")
LOG_CHANNEL_ID = int(os.getenv("LOG_CHANNEL_ID", "0"))
TICKET_CATEGORY_ID = int(os.getenv("TICKET_CATEGORY_ID", "0"))

PANEL_TEXT = (
    "**–ö—É—Ä—Å—ã –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:**\n"
    "–ú–µ–Ω—å—à–µ 1.999 ‚ÇΩ ‚Äî 2.000 $\n"
    "–û—Ç 2.000 ‚ÇΩ –¥–æ 3.999 ‚ÇΩ - 2.500 $\n"
    "–û—Ç 4.000 ‚ÇΩ –¥–æ 5.999 ‚ÇΩ - 3.000 $\n"
    "–û—Ç 6.000 ‚ÇΩ –¥–æ 9.999 ‚ÇΩ - 3.500 $\n"
    "–û—Ç 10.000 ‚ÇΩ –∏ –≤—ã—à–µ - 4.500 $\n\n"
    "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å.\n\n"
    "> **–û–§–û–†–ú–õ–ï–ù–ò–ï –ó–ê–Ø–í–ö–ò –ù–ê –ü–û–ö–£–ü–ö–£ –î–û–ù–ê–¢–ê**\n"
    "> - –í–∞—à –Ω–∏–∫:\n"
    "> - –ò–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –¥–æ–Ω–∞—Ç:\n"
    "> - –ù–∞ –∫–∞–∫–æ–º —Å–µ—Ä–≤–µ—Ä–µ: (RPM WEST | RPM NORTH | BossHunt)\n"
    "> - –í–∏–¥ –≤–∞–ª—é—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã: (–í–∞–ª—é—Ç–∞ RPM WEST | –í–∞–ª—é—Ç–∞ RPM NORTH | –í–∞–ª—é—Ç–∞ BH)\n"
    "> - –ü–∏–Ω–≥ –ø—Ä–æ–¥–∞–≤—Ü–æ–≤:\n\n"
    ```–ü–æ–¥—Å–∫–∞–∑–∫–∞  –ø–æ –ø–∏–Ω–≥–∞–º:
@–ü—Ä–æ–¥–∞–≤–µ—Ü | RPM WESNORT ‚Äî –ø—Ä–æ–¥–∞—é—Ç –¥–æ–Ω–∞—Ç—ã –Ω–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö RPM –∏ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –≤—Å–µ –≤–∞–ª—é—Ç—ã —Å–µ—Ä–≤–µ—Ä–æ–≤ RPM.
@–ü—Ä–æ–¥–∞–≤–µ—Ü | RPM WEST ‚Äî –ø—Ä–æ–¥–∞—é—Ç –¥–æ–Ω–∞—Ç—ã —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ RPM WEST –∏ —Ç–æ–ª—å–∫–æ –∑–∞ –≤–∞–ª—é—Ç—É —Å–µ—Ä–≤–µ—Ä–∞ RPM WEST.
@–ü—Ä–æ–¥–∞–≤–µ—Ü | RPM NORTH ‚Äî –ø—Ä–æ–¥–∞—é—Ç –¥–æ–Ω–∞—Ç—ã —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ RPM NORTH –∏ —Ç–æ–ª—å–∫–æ –∑–∞ –≤–∞–ª—é—Ç—É —Å–µ—Ä–≤–µ—Ä–∞ RPM NORTH.
@–ü—Ä–æ–¥–∞–≤–µ—Ü | BH ‚Äî –ø—Ä–æ–¥–∞—é—Ç –¥–æ–Ω–∞—Ç—ã —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ BossHunt –∏ —Ç–æ–ª—å–∫–æ –∑–∞ –≤–∞–ª—é—Ç—É —Å–µ—Ä–≤–µ—Ä–∞ BossHunt.```"
)

OLD_PANEL_TEXT = (
    "**–ö—É—Ä—Å—ã –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:**\n"
    "–ú–µ–Ω—å—à–µ 1.999 ‚ÇΩ ‚Äî 2.000 $\n"
    "–û—Ç 2.000 ‚ÇΩ –¥–æ 3.999 ‚ÇΩ ‚Äî 2.500 $\n"
    "–û—Ç 4.000 ‚ÇΩ –¥–æ 5.999 ‚ÇΩ ‚Äî 3.000 $\n"
    "–û—Ç 6.000 ‚ÇΩ –¥–æ 9.999 ‚ÇΩ ‚Äî 3.500 $\n"
    "–û—Ç 10.000 ‚ÇΩ –∏ –≤—ã—à–µ ‚Äî 4.500 $\n\n"
    "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å."
)

def round_to_tens(number: int) -> int:
    return number + (10 - number % 10) if number % 10 >= 5 else number - number % 10

def adjust_amount(amount: float) -> int:
    return round_to_tens(math.ceil(amount))

def get_rate(amount: int) -> int:
    if amount < 1999: return 2000
    if amount < 4000: return 2500
    if amount < 6000: return 3000
    if amount < 10000: return 3500
    return 4500

def format_with_dots(number) -> str:
    if isinstance(number, float) and number.is_integer():
        number = int(number)
    return f"{number:,}".replace(",", ".")

class ConvertModal(ui.Modal, title="–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è"):
    amount = ui.TextInput(label="–°—É–º–º–∞ (‚ÇΩ)", placeholder="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ")

    async def on_submit(self, interaction: discord.Interaction):
        try:
            raw_amount = float(self.amount.value)
            adjusted = adjust_amount(raw_amount)
            rate = get_rate(adjusted)
            result = adjusted * rate
            commission = int(result * 0.01)
            total = result + commission
            raw_clean = int(raw_amount) if raw_amount.is_integer() else raw_amount

            embed = discord.Embed(title="–ò—Ç–æ–≥ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:", color=0x2ecc71)
            embed.add_field(name="–°—É–º–º–∞ (‚ÇΩ)", value=f"{format_with_dots(raw_clean)}‚ÇΩ", inline=False)
            embed.add_field(name="–û–∫—Ä—É–≥–ª–µ–Ω–æ (‚ÇΩ)", value=f"{format_with_dots(adjusted)}‚ÇΩ", inline=False)
            embed.add_field(name="–ö—É—Ä—Å ($)", value=f"{format_with_dots(rate)}$", inline=False)
            embed.add_field(name="–†–µ–∑—É–ª—å—Ç–∞—Ç ($ |  ä)", value=f"{format_with_dots(result)}$", inline=False)
            embed.add_field(name="–ö–æ–º–∏—Å—Å–∏—è 1% ($)", value=f"{format_with_dots(commission)}$", inline=False)
            embed.add_field(name="**–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ ($)**", value=f"**{format_with_dots(total)}$**", inline=False)
            await interaction.response.send_message(embed=embed, ephemeral=True)

            log_channel = interaction.guild.get_channel(LOG_CHANNEL_ID)
            if log_channel:
                log = discord.Embed(title="–õ–æ–≥ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:", color=0x3498db, timestamp=datetime.now(timezone.utc))
                log.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=str(interaction.user), inline=False)
                log.add_field(name="–ö–∞–Ω–∞–ª", value=interaction.channel.mention, inline=False)
                log.add_field(name="–°—É–º–º–∞ (‚ÇΩ)", value=f"{format_with_dots(raw_clean)}‚ÇΩ", inline=True)
                log.add_field(name="–û–∫—Ä—É–≥–ª–µ–Ω–æ (‚ÇΩ)", value=f"{format_with_dots(adjusted)}‚ÇΩ", inline=True)
                log.add_field(name="–ö—É—Ä—Å ($)", value=f"{format_with_dots(rate)}$", inline=True)
                log.add_field(name="–†–µ–∑—É–ª—å—Ç–∞—Ç ($ |  ä)", value=f"{format_with_dots(result)}$", inline=True)
                log.add_field(name="–ö–æ–º–∏—Å—Å–∏—è 1% ($)", value=f"{format_with_dots(commission)}$", inline=True)
                log.add_field(name="–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ ($)", value=f"{format_with_dots(total)}$", inline=True)
                await log_channel.send(embed=log)

        except ValueError:
            await interaction.response.send_message("–û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ!", ephemeral=True)

class ConvertButton(ui.Button):
    def __init__(self):
        super().__init__(label="–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å", style=discord.ButtonStyle.primary, custom_id="convert_btn")

    async def callback(self, interaction: discord.Interaction):
        await interaction.response.send_modal(ConvertModal())

class AdditionalButton(ui.Button):
    def __init__(self):
        super().__init__(label="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ", style=discord.ButtonStyle.secondary, custom_id="additional_btn")

    async def callback(self, interaction: discord.Interaction):
        await interaction.response.send_message(
            "```–î—Ä—É–≥–æ–µ :\n\n"
            "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –æ—á–µ—Ä–µ–¥—å –≤ —Ç–∏–∫–µ—Ç–µ -> 300.000$ (< 1.500‚ÇΩ), 700.000$ (> 1.500‚ÇΩ)\n"
            "–†–∞–∑–±–∞–Ω –≤ –¥–∏—Å–∫–æ—Ä–¥–µ ¬´–¢–ü¬ª -> 500.000$\n"
            "–°–Ω—è—Ç–∏–µ —á—Å-–¥–æ–Ω–∞—Ç–∞ –∏ —Ç.–¥. -> 400.000$\n"
            "–†–∞–∑–±–∞–Ω –≤ –¥–∏—Å–∫–æ—Ä–¥–µ RPM -> —Ü–µ–Ω—É —É–∑–Ω–∞–≤–∞—Ç—å —É justlead```",
            ephemeral=True
        )

class RatesView(ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(ConvertButton())
        self.add_item(AdditionalButton())

intents = discord.Intents.all()
bot = commands.Bot(command_prefix="!", intents=intents)

@bot.command(name="panelz")
@commands.has_permissions(administrator=True)
async def panelz(ctx):
    view = RatesView()
    await ctx.send(PANEL_TEXT, view=view)
    await ctx.message.delete()

@bot.command(name="panelzz")
@commands.has_permissions(administrator=True)
async def panelzz(ctx):
    view = RatesView()
    await ctx.send(OLD_PANEL_TEXT, view=view)
    await ctx.message.delete()

@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

@bot.event
async def on_guild_channel_create(channel):
    if isinstance(channel, discord.TextChannel) and channel.category_id == TICKET_CATEGORY_ID:
        await asyncio.sleep(1)
        try:
            async for msg in channel.history(limit=5):
                if msg.author == bot.user and msg.content.startswith("**–ö—É—Ä—Å—ã –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:**"):
                    return
            view = RatesView()
            await channel.send(PANEL_TEXT, view=view)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–∞–Ω–µ–ª–∏: {e}")

async def handle(request):
    return web.Response(text="–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!")

async def run_webserver():
    app = web.Application()
    app.add_routes([web.get('/', handle)])
    runner = web.AppRunner(app)
    await runner.setup()
    port = int(os.environ.get("PORT", 10000))
    site = web.TCPSite(runner, '0.0.0.0', port)
    await site.start()
    print(f"üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É {port}")

async def main():
    await run_webserver()
    print("üöÄ –ó–∞–ø—É—Å–∫–∞—é Discord-–±–æ—Ç–∞...")
    await bot.start(TOKEN)

if __name__ == "__main__":
    asyncio.run(main())
